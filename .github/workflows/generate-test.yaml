name: "Generate and test features"
on:
  workflow_dispatch:

  pull_request:

jobs:

  find-feature-specs:
    runs-on: ubuntu-latest
    name: Find features
    outputs:
      filenames: ${{ steps.feature-specs.outputs.filenames }}
    steps:
      - uses: actions/checkout@v3    
      - id: feature-specs
        uses: ./.github/actions/list-files-action
        with:
          path: ./feature_specs

  test:
    needs: [find-feature-specs]
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features: ${{ fromJson(needs.find-feature-specs.outputs.filenames )}}
        baseImage: ["mcr.microsoft.com/devcontainers/base:ubuntu"]
    steps:
      - uses: actions/checkout@v3

      - name: "install generator"
        run: |
          pipx install cookiecutter
          pipx install shfmt-py

      - name: Generate
        id: generate
        run: |
          set -ex
          cd ..
          cookiecutter ./features/pkgs/feature-template --overwrite-if-exists --no-input --config-file ./features/feature_specs/${{ matrix.features }}
          cd features
        
      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  test-global:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only .
