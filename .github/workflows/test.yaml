name: "CI - Test Features"
on:
  push:
    branches:
      - main
      
  pull_request:

  workflow_dispatch:

jobs:

  find-features:
    name: Find features
    container: ubuntu-latest
    outputs:
      folders: ${{ steps.features.outputs.folders }}
    steps:
      - uses: actions/checkout@v1

      - id: features
        uses: philips-labs/list-folders-action@v1
        with:
          path: ./src

  test:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features: ["pulumi", "haskell", "kubie", "kubectx-kubens", "argo-cd", "argo-workflows", "digitalocean-cli", "heroku-cli", "deno", "zig", "d", "cookiecutter", "poetry", "ansible", "tox", "brownie", "pre-commit", "nox", "glances", "coverage-py", "black", "mypy", "isort", "pylint", "vulture", "datasette", "jrnl", "lektor", "localstack", "meltano", "mitmproxy", "mkdocs", "pdm", "pyscaffold"]
        baseImage: ["mcr.microsoft.com/devcontainers/base:ubuntu"]
    steps:
      - uses: actions/checkout@v2

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  test-global:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only .
