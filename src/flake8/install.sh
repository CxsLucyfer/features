#!/usr/bin/env bash
#-------------------------------------------------------------------------------------------------------------
# This code was generated by the DevContainers Feature Cookiecutter
# Docs: https://github.com/devcontainers-contrib/features/tree/main/pkgs/feature-template#readme
#-------------------------------------------------------------------------------------------------------------

set -e

# pipx version for flake8
FLAKE8=${VERSION:-"latest"}
# injection versions for flake8 pipx env
FLAKE8_BLACK=${FLAKE8BLACK:-"none"}

FLAKE8_ISORT=${FLAKE8ISORT:-"none"}

FLAKE8_PRINT=${FLAKE8PRINT:-"none"}

FLAKE8_BANDIT=${FLAKE8BANDIT:-"none"}

FLAKE8_PYLINT=${FLAKE8PYLINT:-"none"}

FLAKE8_BUILTINS=${FLAKE8BUILTINS:-"none"}

FLAKE8_SPELLCHECK=${FLAKE8SPELLCHECK:-"none"}

FLAKE8_PYTEST_STYLE=${FLAKE8PYTESTSTYLE:-"none"}

FLAKE8_DJANGO=${FLAKE8DJANGO:-"none"}

FLAKE8_FASTAPI=${FLAKE8FASTAPI:-"none"}

# Clean up
rm -rf /var/lib/apt/lists/*

if [ "$(id -u)" -ne 0 ]; then
	echo -e 'Script must be run as 
    root. Use sudo, su, or add "USER root" to your Dockerfile before running this script.'
	exit 1
fi

install_via_pipx() {
	# This is part of devcontainers-contrib script library
	# source: https://github.com/devcontainers-contrib/features/tree/v1.1.6/script-library
	PACKAGES=("$@")
	arraylength="${#PACKAGES[@]}"

	env_name=$(echo ${PACKAGES[0]} | cut -d "=" -f 1 | cut -d "<" -f 1 | cut -d ">" -f 1)

	# if no python - install it
	if ! dpkg -s python3-minimal python3-pip libffi-dev python3-venv >/dev/null 2>&1; then
		apt-get update -y
		apt-get -y install python3-minimal python3-pip libffi-dev python3-venv
	fi
	export PIPX_HOME=/usr/local/pipx
	mkdir -p ${PIPX_HOME}
	export PIPX_BIN_DIR=/usr/local/bin
	export PYTHONUSERBASE=/tmp/pip-tmp
	export PIP_CACHE_DIR=/tmp/pip-tmp/cache
	pipx_bin=pipx
	# if pipx not exists - install it
	if ! type pipx >/dev/null 2>&1; then
		pip3 install --disable-pip-version-check --no-cache-dir --user pipx packaging==21.3
		pipx_bin=/tmp/pip-tmp/bin/pipx
	fi
	# install main package
	${pipx_bin} install --pip-args '--no-cache-dir --force-reinstall' -f "${PACKAGES[0]}"
	# install injections (if provided)
	for ((i = 1; i < ${arraylength}; i++)); do
		${pipx_bin} inject $env_name --pip-args '--no-cache-dir --force-reinstall' -f "${PACKAGES[$i]}"
	done

	# cleaning pipx to save disk space
	rm -rf /tmp/pip-tmp
}

pipx_installations=()
if [ "$FLAKE8" != "none" ]; then
	if [ "$FLAKE8" = "latest" ]; then
		pipx_installations+=("flake8")
	else
		pipx_installations+=("flake8==$FLAKE8")
	fi
	if [ "$FLAKE8_BLACK" != "none" ]; then
		if [ "$FLAKE8_BLACK" = "latest" ]; then
			pipx_installations+=("flake8-black")
		else
			pipx_installations+=("flake8-black==$FLAKE8_BLACK")
		fi
	fi

	if [ "$FLAKE8_ISORT" != "none" ]; then
		if [ "$FLAKE8_ISORT" = "latest" ]; then
			pipx_installations+=("flake8-isort")
		else
			pipx_installations+=("flake8-isort==$FLAKE8_ISORT")
		fi
	fi

	if [ "$FLAKE8_PRINT" != "none" ]; then
		if [ "$FLAKE8_PRINT" = "latest" ]; then
			pipx_installations+=("flake8-print")
		else
			pipx_installations+=("flake8-print==$FLAKE8_PRINT")
		fi
	fi

	if [ "$FLAKE8_BANDIT" != "none" ]; then
		if [ "$FLAKE8_BANDIT" = "latest" ]; then
			pipx_installations+=("flake8-bandit")
		else
			pipx_installations+=("flake8-bandit==$FLAKE8_BANDIT")
		fi
	fi

	if [ "$FLAKE8_PYLINT" != "none" ]; then
		if [ "$FLAKE8_PYLINT" = "latest" ]; then
			pipx_installations+=("flake8-pylint")
		else
			pipx_installations+=("flake8-pylint==$FLAKE8_PYLINT")
		fi
	fi

	if [ "$FLAKE8_BUILTINS" != "none" ]; then
		if [ "$FLAKE8_BUILTINS" = "latest" ]; then
			pipx_installations+=("flake8-builtins")
		else
			pipx_installations+=("flake8-builtins==$FLAKE8_BUILTINS")
		fi
	fi

	if [ "$FLAKE8_SPELLCHECK" != "none" ]; then
		if [ "$FLAKE8_SPELLCHECK" = "latest" ]; then
			pipx_installations+=("flake8-spellcheck")
		else
			pipx_installations+=("flake8-spellcheck==$FLAKE8_SPELLCHECK")
		fi
	fi

	if [ "$FLAKE8_PYTEST_STYLE" != "none" ]; then
		if [ "$FLAKE8_PYTEST_STYLE" = "latest" ]; then
			pipx_installations+=("flake8-pytest-style")
		else
			pipx_installations+=("flake8-pytest-style==$FLAKE8_PYTEST_STYLE")
		fi
	fi

	if [ "$FLAKE8_DJANGO" != "none" ]; then
		if [ "$FLAKE8_DJANGO" = "latest" ]; then
			pipx_installations+=("flake8-django")
		else
			pipx_installations+=("flake8-django==$FLAKE8_DJANGO")
		fi
	fi

	if [ "$FLAKE8_FASTAPI" != "none" ]; then
		if [ "$FLAKE8_FASTAPI" = "latest" ]; then
			pipx_installations+=("flake8-fastapi")
		else
			pipx_installations+=("flake8-fastapi==$FLAKE8_FASTAPI")
		fi
	fi

fi

install_via_pipx "${pipx_installations[@]}"

# Clean up
rm -rf /var/lib/apt/lists/*

echo "Done!"
